name: rp2 port

permissions:
  contents: write
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        board: [PICO]
    steps:
    - uses: actions/checkout@v2

    # Clona lv_micropython y los submÃ³dulos necesarios
    - name: Clone lv_micropython repository
      run: |
        git clone --recurse-submodules https://github.com/lvgl/lv_micropython.git
        cd lv_micropython
        git submodule update --init --recursive

    - name: arm-none-eabi-gcc
      uses: carlosperate/arm-none-eabi-gcc-action@v1.3.0
      with:
        release: '9-2019-q4'

    - name: Initialize lv_bindings submodule
      run: cd lv_micropython && git submodule update --init --recursive lib/lv_bindings  

    - name: Initialize Micropython submodules
      run: cd lv_micropython && make -C ports/rp2 BOARD=${{ matrix.board }} USER_C_MODULES=../../lib/lv_bindings/bindings.cmake submodules

    - name: Build mpy-cross
      run: cd lv_micropython && make -j $(nproc) -C mpy-cross

    - name: Build ${{ matrix.board }} and create UF2
      run: |
        cd lv_micropython
        make -j $(nproc) -C ports/rp2 BOARD=${{ matrix.board }} USER_C_MODULES=../../lib/lv_bindings/bindings.cmake
        mkdir -p ./artifacts
        cp ports/rp2/build-${{ matrix.board }}/firmware.uf2 ./artifacts/PICO.uf2  # Mover el archivo UF2

    - name: Generate Tag
      id: tag
      run: echo "TAG_NAME=release-$(date +'%Y%m%d-%H%M')" >> $GITHUB_ENV
      
    - name: Create Release
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        automatic_release_tag: ${{ env.TAG_NAME }} 
        title: "MicroPython + ST7789 Display Driver Release for version ${{ env.TAG_NAME }}"
        files: ./artifacts/PICO.uf2  # Especificar correctamente el archivo UF2
