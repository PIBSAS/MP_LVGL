name: rp2 port
#
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        board: [PICO]
    steps:
    - uses: actions/checkout@v2
    - name: arm-none-eabi-gcc
      uses: carlosperate/arm-none-eabi-gcc-action@v1.3.0
      with:
        release: '9-2019-q4'
    - name: Initialize lv_bindings submodule
      run: git submodule update --init --recursive lib/lv_bindings  
    - name: Initialize Micropython submodules
      run: make -C ports/rp2 BOARD=${{ matrix.board }} USER_C_MODULES=../../lib/lv_bindings/bindings.cmake submodules
    - name: Build ${{ matrix.board }}
      run: make -j $(nproc) -C ports/rp2 BOARD=${{ matrix.board }} USER_C_MODULES=../../lib/lv_bindings/bindings.cmake
    - name: Copy Firmware Artifacts
      run: |
        cp ports/rp2/build-${{ matrix.board }}/firmware.uf2 .
        cp ports/rp2/build-${{ matrix.board }}/firmware.elf .
    - name: List files
      run: ls -alh
    - name: Upload firmware artifacts
      uses: actions/upload-artifact@v3
      with:
        name: firmware-artifacts
        path: firmware.uf2, firmware.elf

  release:
    needs: build
    runs-on: ubuntu-20.04
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: firmware-artifacts

    - name: Create or Update Release
      id: create_release
      uses: softprops/action-gh-release@v1.6.0
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Firmware to Release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: firmware.uf2
        asset_name: firmware-${{ matrix.board }}.uf2
        asset_content_type: application/octet-stream

